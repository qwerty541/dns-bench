name: check

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  workflow_dispatch: {}

jobs:
  clippy:
    name: Clippy
    runs-on: ubuntu-latest

    strategy:
      matrix:
        rust: [stable, beta, nightly]

    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Install rust (${{ matrix.rust }})
        uses: dtolnay/rust-toolchain@e97e2d8cc328f1b50210efc529dca0028893a2d9
        with:
          components: clippy
          toolchain: ${{ matrix.rust }}

      - name: Run clippy
        run: cargo clippy --all-features -- -D warnings

  fmt:
    name: Formatting
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Install rust (stable)
        uses: dtolnay/rust-toolchain@e97e2d8cc328f1b50210efc529dca0028893a2d9
        with:
          components: rustfmt
          toolchain: stable

      - name: Run rustfmt
        run: cargo fmt --check

  build_and_test:
    name: Build and test
    runs-on: ${{ matrix.os }}-latest

    strategy:
      matrix:
        os: [ubuntu, macos, windows]
        rust: [stable, beta, nightly]

    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Install rust (${{ matrix.rust }})
        uses: dtolnay/rust-toolchain@e97e2d8cc328f1b50210efc529dca0028893a2d9
        with:
          toolchain: ${{ matrix.rust }}

      - name: Cache
        uses: actions/cache@0057852bfaa89a56745cba8c7296529d2fc39830 # v4.3.0
        with:
          path: |
            ~/.cargo
            target
          key: ${{ matrix.os }}-${{ matrix.rust }}-${{ hashFiles('Cargo.lock') }}
          restore-keys: |
            ${{ matrix.os }}-${{ matrix.rust }}-${{ hashFiles('Cargo.lock') }}
            ${{ matrix.os }}-${{ matrix.rust }}-
          enableCrossOsArchive: true

      - name: Build
        run: cargo build --all-targets

      - name: Run tests
        run: cargo test

      - name: Perform test application run (IPv4)
        run: cargo run -- --name-servers-ip v4 --lookup-ip v4 --timeout 1

      # Disabled due to GitHub Actions not supporting IPv6 yet.
      # - name: Perform test application run (IPv6)
      #   run: cargo run -- --name-servers-ip v6 --lookup-ip v6 --timeout 1

  msrv:
    name: Check minimal supported rust version (MSRV).
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Install rust (stable)
        uses: dtolnay/rust-toolchain@e97e2d8cc328f1b50210efc529dca0028893a2d9
        with:
          toolchain: stable

      - name: Cache
        uses: actions/cache@0057852bfaa89a56745cba8c7296529d2fc39830 # v4.3.0
        with:
          path: |
            ~/.cargo
            target
          key: ${{ runner.os }}-msrv
          enableCrossOsArchive: true

      - name: Install cargo-msrv
        run: cargo install cargo-msrv

      - name: Check msrv
        run: cargo msrv find

  docker_image:
    name: Docker image build and test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Pull previous image for cache
        run: docker pull qwerty541/dns-bench:latest || true

      - name: Modify permissions for build and test scripts
        run: chmod +x ./docker/build.sh ./docker/test-ci.sh

      - name: Build Docker image
        run: ./docker/build.sh

      - name: Test Docker image
        run: ./docker/test-ci.sh
