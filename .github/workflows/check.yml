name: check

on:
    push:
        branches:
            - master
    pull_request:
        branches:
            - master
    workflow_dispatch: {}

jobs:
    lints:
        name: Rustfmt and clippy
        runs-on: ubuntu-latest

        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Install rust (stable)
              uses: dtolnay/rust-toolchain@stable
              with:
                  components: clippy, rustfmt

            - name: Run rustfmt
              run: cargo fmt --check

            - name: Run clippy
              run: cargo clippy --all-features -- -D warnings

    build_and_test:
        name: Build and test
        runs-on: ubuntu-latest

        strategy:
            matrix:
                rust: [stable, beta, nightly]

        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Install rust (${{ matrix.rust }})
              uses: dtolnay/rust-toolchain@master
              with:
                  toolchain: ${{ matrix.rust }}

            - name: Cache
              uses: actions/cache@v3
              with:
                  path: |
                      ~/.cargo
                      target
                  key: ${{ runner.os }}-${{ matrix.rust }}-${{ hashFiles('Cargo.lock') }}
                  restore-keys: |
                      ${{ runner.os }}-${{ matrix.rust }}-${{ hashFiles('Cargo.lock') }}
                      ${{ runner.os }}-${{ matrix.rust }}-

            - name: Build
              run: cargo build --all-targets

            - name: Tests
              run: cargo test

    msrv:
        name: Check minimal supported rust version (MSRV).
        runs-on: ubuntu-latest

        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Install rust (stable)
              uses: dtolnay/rust-toolchain@stable

            - name: Cache
              uses: actions/cache@v3
              with:
                  path: ~/.cargo
                  key: ${{ runner.os }}-msrv

            - name: Install cargo-msrv
              run: cargo install cargo-msrv

            - name: Check msrv
              run: cargo msrv
